# This docker-compose file provides an ephemeral MLflow and lakeFS instance for
# development purposes.

version: "3"
services:
  dagster_postgresql:
    image: postgres:11
    container_name: dagster_postgresql
    environment:
      POSTGRES_USER: "postgres_user"
      POSTGRES_PASSWORD: "postgres_password"
      POSTGRES_DB: "postgres_db"
    networks:
      - ai_kickstart_network

  dagster_grpc_server:
    build:
      context: ..
      dockerfile: dagster_grpc.Dockerfile
    container_name: dagster_grpc_server
    image: dagster_grpc_server_image
#    restart: always
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
      DAGSTER_CURRENT_IMAGE: "dagster_grpc_server_image"
    expose:
      - 5432
    ports:
      - 5432:5432
    networks:
      - ai_kickstart_network
    healthcheck:
      test: [ "CMD", "ls", "-l", "/proc/1/exe" ]
      interval: 10s
      timeout: 5s
      retries: 5

  dagster_webserver:
    build:
      context: ..
      dockerfile: dagster_daemon.Dockerfile
    entrypoint:
      - dagster-webserver
      - -h
      - "0.0.0.0"
      - -p
      - "3000"
      - -w
      - workspace.yaml
    container_name: dagster_webserver
    expose:
      - 3000
    ports:
      - 3000:3000
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
      DAGSTER_CURRENT_IMAGE: "dagster_grpc_server_image"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    depends_on:
      dagster_grpc_server:
        condition: service_healthy
    networks:
      - ai_kickstart_network

  dagster_daemon:
    build:
      context: ..
      dockerfile: dagster_daemon.Dockerfile
    entrypoint:
      - dagster-daemon
      - run
      - -w
      - workspace.yaml
    container_name: dagster_daemon
    restart: on-failure
    environment:
      DAGSTER_POSTGRES_USER: "postgres_user"
      DAGSTER_POSTGRES_PASSWORD: "postgres_password"
      DAGSTER_POSTGRES_DB: "postgres_db"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/io_manager_storage:/tmp/io_manager_storage
    depends_on:
      dagster_grpc_server:
        condition: service_healthy
    networks:
      - ai_kickstart_network

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.10.2
    container_name: mlflow
    expose:
      - 4000
    ports:
      - 4000:4000
    command: mlflow server --host 0.0.0.0 --port 4000
    networks:
      - ai_kickstart_network
  
  lakefs:
    image: treeverse/lakefs:1.7.0
    expose:
      - 8000
    ports:
      - 8000:8000
    container_name: lakefs
    environment:
      LAKEFS_INSTALLATION_USER_NAME: "quickstart"
      LAKEFS_INSTALLATION_ACCESS_KEY_ID: "AKIAIOSFOLQUICKSTART"
      LAKEFS_INSTALLATION_SECRET_ACCESS_KEY: "wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY"
      LAKEFS_DATABASE_TYPE: "local"
      LAKEFS_AUTH_ENCRYPT_SECRET_KEY: "THIS_MUST_BE_CHANGED_IN_PRODUCTION"
      LAKEFS_BLOCKSTORE_TYPE: "local"
    networks:
      - ai_kickstart_network


networks:
  ai_kickstart_network:
    driver: bridge
    name: ai_kickstart_network
